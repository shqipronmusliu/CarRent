@model IPagedList<CarRent.Models.Car>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Common
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["UserMessage"]</h2>

@if (User.Identity.IsAuthenticated)
{
    @if (User.IsInRole("Admin"))
    {
        <h1>Index</h1>
    }
}

<form asp-action="Index" method="get">
    <div class="form-group">
        <input type="text" name="SearchString" class="form-control" placeholder="Search by car name..." value="@ViewData["SearchString"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>
@if (!String.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
{
    <p>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </p>
}

@if (User.Identity.IsAuthenticated)
{
    @if (User.IsInRole("Admin"))
    {
        <p>
            <a asp-action="Create">Create new Car</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>
            <th>Status</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if (item.IsReserved)
                {
                    <span class="text-danger">Reserved</span>
                }
                else
                {
                    <span class="text-success">Available</span>
                }
            </td>
            <td>
                @if (User.Identity.IsAuthenticated)
                    {
                        @if (User.IsInRole("Admin"))
                        {
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    }
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
            </td>
            <td>
                @if (!item.IsReserved && !User.IsInRole("Admin"))
                {
                    <form asp-action="Reserve" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" class="btn btn-success">Reserve</button>
                    </form>
                }
            </td>
        </tr>
}   
    </tbody>
</table>
<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewData["CurrentFilter"] }), new PagedListRenderOptions
{
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    UlElementClasses = new[] { "pagination" }
})
</div>
